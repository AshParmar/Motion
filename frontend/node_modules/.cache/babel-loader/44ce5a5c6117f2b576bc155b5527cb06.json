{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashpa\\\\Downloads\\\\Emotify-master\\\\Emotify-master\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport Bgm from \"./components/bgm.mp4\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Garlic() {\n  _s();\n  const [mood, setMood] = useState(null);\n  const [playlistUrl, setPlaylistUrl] = useState(null);\n  const [songs, setSongs] = useState([]);\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:5000/\") // Calling Flask backend\n    .then(response => response.json()).then(data => {\n      if (data.error) {\n        alert(data.error);\n        return;\n      }\n      setMood(data.mood);\n      setPlaylistUrl(data.playlist_url);\n      setSongs(data.recommended_songs || []);\n    }).catch(error => console.error(\"Error fetching recommendations:\", error));\n  }, []); // Run once when the component loads\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar navbar-expand-lg navbar-light bg-dark\",\n      style: {\n        paddingLeft: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"navbar-brand logo\",\n        children: \"ANKH\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"collapse navbar-collapse\",\n        id: \"navbarNav\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"navbar-nav\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"nav-item active\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"nav-link\",\n              id: \"home\",\n              href: \"http://localhost:3000/home\",\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"nav-item\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"nav-link\",\n              id: \"abt-us\",\n              href: \"http://localhost:3000/about\",\n              children: \"About-Us\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      loop: true,\n      autoPlay: true,\n      muted: true,\n      id: \"myvideo\",\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: Bgm,\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"abt\",\n        children: \"Introducing Emotify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"abt2\",\n        children: /*#__PURE__*/_jsxDEV(\"center\", {\n          children: [\"We\\u2019ve trained a model called Emotify which reads facial expressions \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 106\n          }, this), \" and plays songs to lighten the mood.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), mood && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Detected Mood: \", mood]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Recommended Songs:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: songs.map((song, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [song.name, \" by \", song.artist]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), playlistUrl && /*#__PURE__*/_jsxDEV(\"a\", {\n        href: playlistUrl,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Open Spotify Playlist \\uD83C\\uDFB5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"http://127.0.0.1:5000/\",\n      id: \"abt3\",\n      target: \"_blank\",\n      children: \"Try Emotify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(Garlic, \"Sq4wYMC/Xep0F6z3vJdS/6G0EnM=\");\n_c = Garlic;\nexport default Garlic;\nvar _c;\n$RefreshReg$(_c, \"Garlic\");","map":{"version":3,"names":["React","useState","useEffect","Bgm","jsxDEV","_jsxDEV","Garlic","_s","mood","setMood","playlistUrl","setPlaylistUrl","songs","setSongs","fetch","then","response","json","data","error","alert","playlist_url","recommended_songs","catch","console","children","className","style","paddingLeft","fileName","_jsxFileName","lineNumber","columnNumber","id","href","loop","autoPlay","muted","src","type","map","song","index","name","artist","target","rel","_c","$RefreshReg$"],"sources":["C:/Users/ashpa/Downloads/Emotify-master/Emotify-master/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport Bgm from \"./components/bgm.mp4\";\n\nfunction Garlic() {\n    const [mood, setMood] = useState(null);\n    const [playlistUrl, setPlaylistUrl] = useState(null);\n    const [songs, setSongs] = useState([]);\n\n    useEffect(() => {\n        fetch(\"http://127.0.0.1:5000/\")  // Calling Flask backend\n            .then(response => response.json())\n            .then(data => {\n                if (data.error) {\n                    alert(data.error);\n                    return;\n                }\n                setMood(data.mood);\n                setPlaylistUrl(data.playlist_url);\n                setSongs(data.recommended_songs || []);\n            })\n            .catch(error => console.error(\"Error fetching recommendations:\", error));\n    }, []); // Run once when the component loads\n\n    return (\n        <div>\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-dark\" style={{ paddingLeft: \"20px\" }}>\n                <h1 className=\"navbar-brand logo\">ANKH</h1>\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                    <ul className=\"navbar-nav\">\n                        <li className=\"nav-item active\">\n                            <a className=\"nav-link\" id=\"home\" href=\"http://localhost:3000/home\">Home</a>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" id=\"abt-us\" href=\"http://localhost:3000/about\">About-Us</a>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n            <video loop autoPlay muted id=\"myvideo\">\n                <source src={Bgm} type=\"video/mp4\" />\n            </video>\n            <div>\n                <h1 id=\"abt\">Introducing Emotify</h1>\n                <p id=\"abt2\"><center>Weâ€™ve trained a model called Emotify which reads facial expressions <br /> and plays songs to lighten the mood.</center></p>\n            </div>\n\n            {/* Display Mood and Recommendations */}\n            {mood && (\n                <div id=\"results\">\n                    <h2>Detected Mood: {mood}</h2>\n                    <h3>Recommended Songs:</h3>\n                    <ul>\n                        {songs.map((song, index) => (\n                            <li key={index}>{song.name} by {song.artist}</li>\n                        ))}\n                    </ul>\n                    {playlistUrl && (\n                        <a href={playlistUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                            Open Spotify Playlist ðŸŽµ\n                        </a>\n                    )}\n                </div>\n            )}\n\n            {/* Button to Manually Trigger Emotify */}\n            <a href=\"http://127.0.0.1:5000/\" id=\"abt3\" target=\"_blank\">Try Emotify</a>\n        </div>\n    );\n}\n\nexport default Garlic;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}