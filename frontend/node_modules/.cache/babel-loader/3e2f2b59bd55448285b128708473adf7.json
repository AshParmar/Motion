{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashpa\\\\Downloads\\\\Emotify-master\\\\Emotify-master\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mood, setMood] = useState(\"\");\n  const [songs, setSongs] = useState([]);\n  const [playlistId, setPlaylistId] = useState(\"\");\n  const handleDetectMood = async () => {\n    try {\n      const response = await axios.get(\"http://127.0.0.1:5000/\"); // Flask backend URL\n      setMood(response.data.mood);\n      setSongs(response.data.recommended_songs);\n      setPlaylistId(response.data.output.split(\": \")[1]); // Extract playlist ID\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"30px\",\n      fontFamily: \"Arial\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83C\\uDFB5 Emotify - Mood-Based Music Recommender \\uD83C\\uDFB6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDetectMood,\n      style: {\n        padding: \"10px 20px\",\n        fontSize: \"18px\",\n        backgroundColor: \"#1DB954\",\n        color: \"white\",\n        border: \"none\",\n        borderRadius: \"5px\",\n        cursor: \"pointer\",\n        marginBottom: \"20px\"\n      },\n      children: \"Try Emotify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), mood && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Detected Mood: \", mood, \" \\uD83D\\uDE0A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Recommended Songs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyle: \"none\",\n          padding: 0\n        },\n        children: songs.map((song, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            margin: \"10px 0\",\n            padding: \"10px\",\n            backgroundColor: \"#f0f0f0\",\n            borderRadius: \"10px\",\n            width: \"50%\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n          },\n          children: [\"\\uD83C\\uDFB5 \", song.artist, \" - \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: song.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 36\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), playlistId && /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `https://open.spotify.com/playlist/${playlistId}`,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        style: {\n          display: \"inline-block\",\n          marginTop: \"20px\",\n          padding: \"10px 20px\",\n          backgroundColor: \"#1DB954\",\n          color: \"white\",\n          textDecoration: \"none\",\n          borderRadius: \"5px\",\n          fontSize: \"16px\"\n        },\n        children: \"\\uD83C\\uDFA7 Open Spotify Playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Ef7puFsjAnWg6h87M+TfZkAY/Oo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mood","setMood","songs","setSongs","playlistId","setPlaylistId","handleDetectMood","response","get","data","recommended_songs","output","split","error","console","style","textAlign","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","fontSize","backgroundColor","color","border","borderRadius","cursor","marginBottom","listStyle","map","song","index","margin","width","marginLeft","marginRight","artist","name","href","target","rel","display","marginTop","textDecoration","_c","$RefreshReg$"],"sources":["C:/Users/ashpa/Downloads/Emotify-master/Emotify-master/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [mood, setMood] = useState(\"\");\n  const [songs, setSongs] = useState([]);\n  const [playlistId, setPlaylistId] = useState(\"\");\n\n  const handleDetectMood = async () => {\n    try {\n      const response = await axios.get(\"http://127.0.0.1:5000/\"); // Flask backend URL\n      setMood(response.data.mood);\n      setSongs(response.data.recommended_songs);\n      setPlaylistId(response.data.output.split(\": \")[1]); // Extract playlist ID\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n\n  return (\n    <div style={{ textAlign: \"center\", padding: \"30px\", fontFamily: \"Arial\" }}>\n      <h1>ðŸŽµ Emotify - Mood-Based Music Recommender ðŸŽ¶</h1>\n      <button \n        onClick={handleDetectMood} \n        style={{\n          padding: \"10px 20px\",\n          fontSize: \"18px\",\n          backgroundColor: \"#1DB954\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"5px\",\n          cursor: \"pointer\",\n          marginBottom: \"20px\",\n        }}>\n        Try Emotify\n      </button>\n\n      {mood && (\n        <>\n          <h2>Detected Mood: {mood} ðŸ˜Š</h2>\n          <h3>Recommended Songs</h3>\n          <ul style={{ listStyle: \"none\", padding: 0 }}>\n            {songs.map((song, index) => (\n              <li \n                key={index} \n                style={{\n                  margin: \"10px 0\",\n                  padding: \"10px\",\n                  backgroundColor: \"#f0f0f0\",\n                  borderRadius: \"10px\",\n                  width: \"50%\",\n                  marginLeft: \"auto\",\n                  marginRight: \"auto\"\n                }}>\n                ðŸŽµ {song.artist} - <b>{song.name}</b>\n              </li>\n            ))}\n          </ul>\n          {playlistId && (\n            <a \n              href={`https://open.spotify.com/playlist/${playlistId}`} \n              target=\"_blank\" \n              rel=\"noopener noreferrer\"\n              style={{\n                display: \"inline-block\",\n                marginTop: \"20px\",\n                padding: \"10px 20px\",\n                backgroundColor: \"#1DB954\",\n                color: \"white\",\n                textDecoration: \"none\",\n                borderRadius: \"5px\",\n                fontSize: \"16px\"\n              }}>\n              ðŸŽ§ Open Spotify Playlist\n            </a>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}